- name: "Checking gunicorn requirements"
  stat:
    path: "{{ crackerjack.destination }}/venv/bin/gunicorn"
  register: gunicorn

- name: "Checking destination config directory"
  stat:
    path: "{{ crackerjack.destination }}/data/config/service"
  register: config_service_path

- name: "Checking for existing service file"
  stat:
    path: "{{ crackerjack.destination }}/data/config/service/crackerjack.service"
  register: config_service_file

- name: "Checking for installed service"
  stat:
    path: "/etc/systemd/system/crackerjack.service"
  register: existing_service

- name: "Creating directory"
  when: existing_service.stat.exists == False and config_service_path.stat.exists == False
  file:
    path: "{{ crackerjack.destination }}/data/config/service"
    state: directory
    recurse: yes
    owner: "{{ user.name }}"
    group: "{{ user.group }}"

- name: "Creating service file"
  when: existing_service.stat.exists == False and config_service_file.stat.exists == False
  template:
    src: systemd.j2
    dest: "{{ crackerjack.destination }}/data/config/service/crackerjack.service"

- name: "Creating link to service"
  when: existing_service.stat.exists == False
  file:
    src: "{{ crackerjack.destination }}/data/config/service/crackerjack.service"
    dest: "/etc/systemd/system/crackerjack.service"
    state: link

- name: "Enabling and starting service"
  service:
    name: crackerjack
    enabled: true
    state: started
